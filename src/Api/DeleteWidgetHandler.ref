*$FROM Api/ApiUtils
$EXTERN CreateResponse, CreateErrorResponse, CreateParametersErrorResponse;

*$FROM Core/Dashboards
$EXTERN Dashboard-Extended;

*$FROM Models/DashboardModel
$EXTERN
  Dashboard-FindWidgetById,
  Dashboard-DeleteWidgetById,
  FindDashboardById,
  InsertDashboard;


$ENTRY DeleteWidgetHandler {
  t.Ctx t.DeleteWidget
    , <DeleteWidget-DashboardId t.DeleteWidget> : t.DashboardId
    , <DeleteWidget-WidgetId t.DeleteWidget> : t.WidgetId
    , <FindDashboardById t.Ctx t.DashboardId> : {
      t.Dashboard
        , <Dashboard-FindWidgetById t.Dashboard t.WidgetId>
        : {
            t.Widget
              , <Dashboard-DeleteWidgetById t.Dashboard t.WidgetId> : t.UpdatedDashboard
              , <Dashboard-Extended t.UpdatedDashboard>
              : {
                  Success t.ExtendedDashboard
                    , <InsertDashboard t.Ctx t.DashboardId t.UpdatedDashboard> : t.UpdatedDashboards
                    = t.UpdatedDashboards <CreateResponse 200 t.ExtendedDashboard>;

                  Fails e.Error = t.Ctx <CreateErrorResponse 400 e.Error>;
                };

            /* empty */ = t.Ctx <CreateErrorResponse 404 'Widget not found'>;
          };

        /* empty */ = t.Ctx <CreateErrorResponse 404 'Dashboard not found'>;
    };

  t.Ctx t.Json
    = t.Ctx
      <CreateParametersErrorResponse
        t.Json
        '{ dashboard_id: integer, widget_id: integer }'
      >;
}


DeleteWidget-DashboardId {
  (Object e.B ((String 'dashboard_id') t.DashboardId) e.E) = t.DashboardId;

  (Object e.B) = /* empty */;
}


DeleteWidget-WidgetId {
  (Object e.B ((String 'widget_id') t.WidgetId) e.E) = t.WidgetId;

  (Object e.B) = /* empty */;
}
