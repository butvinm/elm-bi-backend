*$FROM Models/Widget
$EXTERN Widget-Id;


$ENTRY Dashboard {
  t.Id t.Title t.Widgets t.DataSource
    = (Object
        ((String 'dashboard_id') t.Id)
        ((String 'title') t.Title)
        ((String 'widgets') t.Widgets)
        ((String 'dataSource') t.DataSource)
      )
}

$ENTRY Dashboard-Id {
* get
  (Object e.B ((String 'dashboard_id') t.Id) e.E) = t.Id;

  (Object e.B) = /* empty */;

* set
  (Object e.B ((String 'dashboard_id') t.Id) e.E) t.NewId
    = (Object e.B ((String 'dashboard_id') t.NewId) e.E);
}


$ENTRY Dashboard-Title {
* get
  (Object e.B ((String 'title') t.Title) e.E) = t.Title;

  (Object e.B) = /* empty */;

* set
  (Object e.B ((String 'title') t.Title) e.E) t.NewTitle
    = (Object e.B ((String 'title') t.NewTitle) e.E);
}


$ENTRY Dashboard-Widgets {
* get
  (Object e.B ((String 'widgets') t.Widgets) e.E) = t.Widgets;

  (Object e.B) = /* empty */;

* set
  (Object e.B ((String 'widgets') t.Widgets) e.E) t.NewWidgets
    = (Object e.B ((String 'widgets') t.NewWidgets) e.E);
}


$ENTRY Dashboard-DataSource {
* get
  (Object e.B ((String 'dataSource') t.DataSource) e.E) = t.DataSource;

  (Object e.B) = /* empty */;

* set
  (Object e.B ((String 'dataSource') t.DataSource) e.E) t.NewDataSource
    = (Object e.B ((String 'dataSource') t.NewDataSource) e.E);
}


$ENTRY Dashboard-Digest {
  t.Dashboard
    = (Object
        ((String 'dashboard_id') <Dashboard-Id t.Dashboard>)
        ((String 'title') <Dashboard-Title t.Dashboard>)
      )
}



$ENTRY Dashboard-InsertWidget {
  t.Dashboard t.Widget
    , <Dashboard-Widgets t.Dashboard> : (Array e.Widgets)
    = <Dashboard-Widgets t.Dashboard (Array e.Widgets t.Widget)>;
}


$ENTRY Dashboard-FindWidgetById {
  t.Dashboard t.Id = <Do-Dashboard-FindWidgetById t.Id <Dashboard-Widgets t.Dashboard>>;
}


Do-Dashboard-FindWidgetById {
  t.Id (Array t.Widget e.Widgets)
    , <Widget-Id t.Widget> : t.Id
    = t.Widget;

  t.Id (Array t.Widget e.Widgets)
    = <Do-Dashboard-FindWidgetById t.Id (Array e.Widgets)>;

  t.Id (Array /* empty */) = /* empty */;
}


$ENTRY Dashboard-DeleteWidgetById {
  t.Dashboard t.Id
    , <Do-Dashboard-DeleteWidgetById () <Dashboard-Widgets t.Dashboard> t.Id> : t.NewWidgets
    = <Dashboard-Widgets t.Dashboard t.NewWidgets>;
}


Do-Dashboard-DeleteWidgetById {
  (e.Passed) (Array t.Widget e.Widgets) t.Id
    , <Widget-Id t.Widget> : t.Id
    = (Array e.Passed e.Widgets);

  (e.Passed) (Array t.Widget e.Widgets) t.Id
    = <Do-Dashboard-DeleteWidgetById (e.Passed t.Widget) (Array e.Widgets) t.Id>;

  (e.Passed) (Array /* empty */) t.Id
    = (Array e.Passed);
}


$ENTRY FindDashboardById {
  (Array t.Dashboard e.Dashboards) t.Id
    , <Dashboard-Id t.Dashboard> : t.Id
    = t.Dashboard;

  (Array t.Dashboard e.Dashboards) t.Id
    = <FindDashboardById (Array e.Dashboards) t.Id>;

  (Array /* empty */) t.Id = /* empty */;
}


$ENTRY DeleteDashboardById {
  t.Dashboards t.Id = <Do-DeleteDashboardById () t.Dashboards t.Id>;
}


Do-DeleteDashboardById {
  (e.Passed) (Array t.Dashboard e.Dashboards) t.Id
    , <Dashboard-Id t.Dashboard> : t.Id
    = (Array e.Passed e.Dashboards);

  (e.Passed) (Array t.Dashboard e.Dashboards) t.Id
    = <Do-DeleteDashboardById (e.Passed t.Dashboard) (Array e.Dashboards) t.Id>;

  (e.Passed) (Array /* empty */) t.Id = (Array e.Passed);
}


$ENTRY InsertDashboard {
  t.Dashboards t.Id t.Dashboard = <Do-InsertDashboard () t.Dashboards t.Id t.Dashboard>;
}


Do-InsertDashboard {
  (e.Passed) (Array t.Dashboard e.Dashboards) t.Id t.NewDashboard
    , <Dashboard-Id t.Dashboard> : t.Id
    = (Array e.Passed t.NewDashboard e.Dashboards);

  (e.Passed) (Array t.Dashboard e.Dashboards) t.Id t.NewDashboard
    = <Do-InsertDashboard (e.Passed t.Dashboard) (Array e.Dashboards) t.Id t.NewDashboard>;

  (e.Passed) (Array /* empty */) t.Id t.NewDashboard
    = (Array e.Passed t.NewDashboard);
}

$ENTRY GenerateId {
  = (Number (<RandomDigit 666>) () ());
}
