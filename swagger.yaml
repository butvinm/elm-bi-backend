openapi: 3.0.0
info:
  title: Elm-BI API
  version: 1.0.1
  description: API for a simplified business intelligence (BI) system.
paths:
  /get-dashboards:
    post:
      summary: Retrieve a list of all created dashboards.
      responses:
        "200":
          description: A list of available dashboards.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Dashboard"
  /get-dashboard:
    post:
      summary: Retrieve details of a specific dashboard by its ID, with optional data recalculation for widgets.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dashboard_id:
                  type: integer
              required:
                - dashboard_id
      responses:
        "200":
          description: Details of the requested dashboard.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dashboard"
  /create-dashboard:
    post:
      summary: Create a new dashboard. Client may specify any dashboard_id, it will be generated automatically and can be retrieved from response.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dashboard"
      responses:
        "201":
          description: Details of the newly created dashboard.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dashboard"
        "400":
          description: Connection to the data source failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /update-dashboard:
    post:
      summary: Update the dashboard.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dashboard"
      responses:
        "200":
          description: Details of the updated dashboard.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dashboard"
        "400":
          description: Connection to the data source failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: The specified dashboard was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /delete-dashboard:
    post:
      summary: Delete the dashboard.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dashboard_id:
                  type: integer
              required:
                - dashboard_id
      responses:
        "200":
          description: The updated list of all dashboards without.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Dashboard"
        "404":
          description: The specified dashboard was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /get-data-source-tables:
    post:
      summary: Retrieve the list of tables and their columns from the data source linked to a dashboard.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dashboard_id:
                  type: integer
              required:
                - dashboard_id
      responses:
        "200":
          description: List of tables and their columns related to the dashboard's data source.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DataSourceTable"
        "400":
          description: The specified dashboard does not have a data source.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: The specified dashboard was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /add-widget:
    post:
      summary: Add a new widget to a dashboard.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dashboard_id:
                  type: integer
                widget:
                  $ref: "#/components/schemas/Widget"
              required:
                - dashboard_id
                - widget
      responses:
        "200":
          description: Details of the dashboard with the newly added widget.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dashboard"
        "404":
          description: The specified dashboard was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /delete-widget:
    post:
      summary: Remove a widget from a dashboard.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dashboard_id:
                  type: integer
                widget_id:
                  description: Widget index withing the list of the dashboard widgets
                  type: integer
              required:
                - dashboard_id
                - widget_id
      responses:
        "200":
          description: Details of the dashboard with the updated list of widgets.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dashboard"
        "404":
          description: The specified widget or dashboard was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /fetch-widget-data:
    post:
      summary: Retrieve data required to render a widget.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - dashboard_id
                - widget_id
              properties:
                dashboard_id:
                  type: integer
                widget_id:
                  description: Widget index withing the list of the dashboard widgets
                  type: integer
      responses:
        "200":
          description: Data specific to the widget type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WidgetData"
        "400":
          description: Failed to execute the query on the data source.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: The specified widget or dashboard was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Dashboard:
      type: object
      properties:
        dashboard_id:
          type: integer
          description: Unique identifier for the dashboard.
        title:
          type: string
          description: User-defined title of the dashboard.
        widgets:
          type: array
          description: List of widgets included in the dashboard.
          items:
            $ref: "#/components/schemas/Widget"
        dataSource:
          $ref: "#/components/schemas/DataSource"
          description: Configuration of the data source associated with the dashboard.
      required:
        - dashboard_id
        - title
        - widgets
        - dataSource
    BaseWidget:
      type: object
      properties:
        widget_type:
          description: Specifies the type of the widget.
          type: string
        title:
          description: User-defined title of the widget.
          type: string
      required:
        - widget_type
        - title
      discriminator:
        propertyName: widget_type
    PieChart:
      allOf:
        - $ref: "#/components/schemas/BaseWidget"
        - type: object
          required:
            - table
            - data_column
          properties:
            table:
              description: Name of the table in the data source used for the pie chart.
              type: string
            data_column:
              description: Name of the column used with categorical values for the pie chart.
              type: string
    PieChartData:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - title
              - count
            properties:
              title:
                type: string
              count:
                type: number
    Histogram:
      allOf:
        - $ref: "#/components/schemas/BaseWidget"
        - type: object
          required:
            - table
            - data_column
          properties:
            table:
              description: Name of the table in the data source used for the histogram.
              type: string
            data_column:
              description: Name of the column with values used to build a histogram.
              type: string
    HistogramData:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            type: number
    Widget:
      oneOf:
        - $ref: "#/components/schemas/PieChart"
        - $ref: "#/components/schemas/Histogram"
      discriminator:
        propertyName: widget_type
    WidgetData:
      oneOf:
        - $ref: "#/components/schemas/PieChartData"
        - $ref: "#/components/schemas/HistogramData"
    DataSource:
      type: object
      properties:
        host:
          description: Hostname or IP address of the data source server.
          type: string
        port:
          description: Port number for connecting to the data source server.
          type: integer
        username:
          description: Username for data source authentication.
          type: string
        password:
          description: Password for data source authentication.
          type: string
        database:
          description: Name of the database to connect to.
          type: string
      required:
        - host
        - port
        - username
        - database
    DataSourceTable:
      type: object
      properties:
        name:
          description: Full table name, including schema, e.g., "HumanResources.Employee".
          type: string
        columns:
          description: List of columns in the table, including their names and data types.
          type: array
          items:
            type: object
            properties:
              name:
                description: Name of the column.
                type: string
              dataType:
                description: Data type of the column.
                type: string
            required:
              - name
              - dataType
      required:
        - name
        - columns
    Error:
      type: object
      properties:
        detail:
          type: string
